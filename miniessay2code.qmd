---
title: "minipaper2-opendatatoronto"
author: "Yichen Ji (Selina)"
format: pdf
---
```{r setup, include = FALSE}

#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(opendatatoronto)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(bookdown)
#print(citation("tidyr"), bibtex=TRUE)
#install.packages("bookdown")
analysis_data <- read_csv(here::here("outputs/data/analysis_data.csv"))

```

```{r}
#| message: false
#| echo: false
#| label: tbl-gender-organize
#| tbl-cap: Gender Distribution by Year

# Calculate the yearly gender counts
yearly_gender_counts <- analysis_data %>%
  group_by(year_of_death, gender) %>%
  summarise(count = n(), .groups = 'drop')

# Reshape to a wide format
gender_data_wide <- yearly_gender_counts %>%
  pivot_wider(names_from = gender, values_from = count, values_fill = list(count = 0))

# Add a sum row for each year
gender_data_wide <- gender_data_wide %>%
  rowwise() %>%
  mutate(Sum = sum(c(Male, Female, Unknown), na.rm = TRUE))

# Calculate the sum of every row
totals <- colSums(gender_data_wide[, c("Female", "Male", "Unknown", "Sum")], na.rm = TRUE)

totals <- as.list(totals)
gender_data_wide$year_of_death <- as.character(gender_data_wide$year_of_death)

final_data <- gender_data_wide %>%
  add_row(year_of_death = "Total", Female = totals$Female, Male = totals$Male, Unknown = totals$Unknown, Sum = totals$Sum)

# Render final data with kable
final_data %>%
  kable(format = "latex", booktabs = TRUE) %>%
  kable_styling(latex_options = c("striped"))

```



@fig-causeofdeathin-years


```{r}
#| label: fig-causeofdeathin-years
#| fig-cap: Trend of causes of death from 2017 to 2023
#| echo: false
#| warning: false
#| message: false
analysis_data <- read_csv(here::here("outputs/data/analysis_data.csv"))
f1 <- analysis_data %>%
  count(year_of_death, cause_of_death) %>%
  ggplot(mapping = aes(x = year_of_death, y = n, group = cause_of_death, color = cause_of_death)) +
  geom_line() +
  theme_minimal() +
  labs(x = "Year", y = "Number of deaths", color = "Cause of death") +
  theme(legend.position = "bottom",
          legend.key.size = unit(0.5, 'cm'), # Adjust labels' size
        legend.text = element_text(size = 6)) 

f1

```


```{r}
library(dplyr)
library(knitr)
library(opendatatoronto)
library(tidyverse)
library(purrr)
library(ggplot2)
packages <- list_packages(limit = 10)

ttc_packages <- search_packages("ttc")

ttc_delay_packages <- search_packages("TTC Subway Delay")

ttc_delay_resources <- ttc_delay_packages %>%
  list_package_resources()

ttc_delay_statistics <- ttc_delay_resources %>%
  slice(5) %>%
  get_resource()

ttc_tibble <- map_dfr(ttc_delay_statistics, ~tibble(
  station = .x$Station,
  code = .x$Code,
  min_delay = .x$`Min Delay`
))

ttc_tibble

ttc_tibble%>%filter(min_delay > 0)

station_delays <- ttc_tibble%>%
  group_by(code) %>%
  summarise(Delay_Count = n())%>%
  ungroup() %>%
  top_n(10, Delay_Count) %>%
  arrange(Delay_Count)

# Plot the histogram
ggplot(station_delays, aes(x = reorder(code, Delay_Count), y = Delay_Count)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Number of Delays per Station", x = "Station", y = "Number of Delays")
```

